{"version":3,"file":"events-strategy.js","sourceRoot":"","sources":["events-strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 16.2.4\n * Build date: Wed Jan 18 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport { EventEmitter, NgZone } from '@angular/core';\r\nimport { DxComponent } from './component';\r\n\r\nconst dxToNgEventNames = {};\r\n\r\ninterface EventSubscriber {\r\n    handler: any;\r\n    unsubscribe: () => void;\r\n}\r\n\r\nexport class NgEventsStrategy {\r\n    private subscribers: { [key: string]: EventSubscriber[] } = {};\r\n\r\n    constructor(private component: DxComponent) { }\r\n\r\n    hasEvent(name: string) {\r\n        return this.getEmitter(name).observers.length;\r\n    }\r\n\r\n    fireEvent(name, args) {\r\n        this.getEmitter(name).next(args && args[0]);\r\n    }\r\n\r\n    on(name, handler) {\r\n        let eventSubscribers = this.subscribers[name] || [],\r\n            subsriber = this.getEmitter(name).subscribe(handler.bind(this.component.instance)),\r\n            unsubscribe = subsriber.unsubscribe.bind(subsriber);\r\n\r\n        eventSubscribers.push({ handler, unsubscribe });\r\n        this.subscribers[name] = eventSubscribers;\r\n    }\r\n\r\n    off(name, handler) {\r\n        let eventSubscribers = this.subscribers[name] || [];\r\n        eventSubscribers\r\n            .filter(i => !handler || i.handler === handler)\r\n            .forEach(i => i.unsubscribe());\r\n    }\r\n\r\n    dispose() {}\r\n\r\n    private getEmitter(eventName: string): EventEmitter<any> {\r\n        let ngEventName = dxToNgEventNames[eventName];\r\n        if (!this.component[ngEventName]) {\r\n            this.component[ngEventName] = new EventEmitter();\r\n        }\r\n        return this.component[ngEventName];\r\n    }\r\n}\r\n\r\nexport class EmitterHelper {\r\n    strategy: NgEventsStrategy;\r\n\r\n    constructor(private ngZone: NgZone, private component: DxComponent) {\r\n        this.strategy = new NgEventsStrategy(component);\r\n    }\r\n    fireNgEvent(eventName: string, eventArgs: any) {\r\n        let emitter = this.component[eventName];\r\n        if (emitter) {\r\n            this.ngZone.run(() => {\r\n                emitter.next(eventArgs && eventArgs[0]);\r\n            });\r\n        }\r\n    }\r\n    createEmitter(ngEventName: string, dxEventName: string) {\r\n        this.component[ngEventName] = new EventEmitter();\r\n        if (dxEventName) {\r\n            dxToNgEventNames[dxEventName] = ngEventName;\r\n        }\r\n    }\r\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}