{"version":3,"file":"template.js","sourceRoot":"","sources":["template.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;GAWG;;AAIH,qBAMO,eAAe,CAAC,CAAA;AAEvB,8BAA+B,iBAAiB,CAAC,CAAA;AAGjD,IAAI,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAEb,iCAAyB,GAAG,qBAAqB,CAAC;AAE/D;IAAA;IAIA,CAAC;IAAD,iBAAC;AAAD,CAAC,AAJD,IAIC;AAJY,kBAAU,aAItB,CAAA;AAGD;IAOI,6BAAoB,WAA6B,EAAU,gBAAkC,EAAE,YAA4B;QAAvG,gBAAW,GAAX,WAAW,CAAkB;QAAU,qBAAgB,GAAhB,gBAAgB,CAAkB;QACzF,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAPD,sBAAI,6CAAY;aAAhB,UAAiB,KAAK;YAClB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;QACtB,CAAC;;;OAAA;;IAOD,oCAAM,GAAN,UAAO,UAAsB;QACzB,IAAI,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,WAAW,EAAE,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;QAC9G,EAAE,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACrD,CAAC;QAGD,SAAS,CAAC,eAAe,CAAC,EAAE,CAAC;QAE7B,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC;aACxB,QAAQ,CAAC,iCAAyB,CAAC;aACnC,EAAE,CAAC,UAAU,EAAE,UAAC,CAAC;YACd,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACzB,SAAS,CAAC,OAAO,EAAE,CAAC;YACxB,CAAC;QACL,CAAC,CAAC,CAAC;IACX,CAAC;IACE,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACtB,QAAQ,EAAE,4BAA4B;iBACzC,EAAG,EAAE;KACL,CAAC;IAEK,kCAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,kBAAW,GAAG;QACrB,EAAC,IAAI,EAAE,uBAAgB,GAAG;QAC1B,EAAC,IAAI,EAAE,8BAAc,GAAG;KACvB,EAJ6F,CAI7F,CAAC;IACK,kCAAc,GAA2C;QAChE,cAAc,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;KACjC,CAAC;IACF,0BAAC;AAAD,CAAC,AA1CD,IA0CC;AA1CY,2BAAmB,sBA0C/B,CAAA;AAGD;IAAA;IASA,CAAC;IATsC,2BAAU,GAA0B;QAC3E,EAAE,IAAI,EAAE,eAAQ,EAAE,IAAI,EAAE,CAAC;oBACrB,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;iBACjC,EAAG,EAAE;KACL,CAAC;IAEK,+BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,uBAAC;AAAD,CAAC,AATD,IASC;AATY,wBAAgB,mBAS5B,CAAA","sourcesContent":["/*!\n * devextreme-angular\n * Version: 16.2.4\n * Build date: Wed Jan 18 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n/* tslint:disable:use-input-property-decorator */\r\n\r\nimport {\r\n    Directive,\r\n    NgModule,\r\n    TemplateRef,\r\n    ViewContainerRef,\r\n    Input\r\n} from '@angular/core';\r\n\r\nimport { DxTemplateHost } from './template-host';\r\n\r\ndeclare function require(params: any): any;\r\nlet $ = require('jquery');\r\n\r\nexport const DX_TEMPLATE_WRAPPER_CLASS = 'dx-template-wrapper';\r\n\r\nexport class RenderData {\r\n    model: any;\r\n    itemIndex: number;\r\n    container: any;\r\n}\r\n\r\n\r\nexport class DxTemplateDirective {\r\n    \r\n    set dxTemplateOf(value) {\r\n        this.name = value;\r\n    };\r\n    name: string;\r\n\r\n    constructor(private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef, templateHost: DxTemplateHost) {\r\n        templateHost.setTemplate(this);\r\n    }\r\n\r\n    render(renderData: RenderData) {\r\n        let childView = this.viewContainerRef.createEmbeddedView(this.templateRef, { '$implicit': renderData.model });\r\n        if (renderData.container) {\r\n            renderData.container.append(childView.rootNodes);\r\n        }\r\n        // =========== WORKAROUND =============\r\n        // https://github.com/angular/angular/issues/12243\r\n        childView['detectChanges']();\r\n        // =========== /WORKAROUND =============\r\n        return $(childView.rootNodes)\r\n            .addClass(DX_TEMPLATE_WRAPPER_CLASS)\r\n            .on('dxremove', (e) => {\r\n                if (!e._angularIntegration) {\r\n                    childView.destroy();\r\n                }\r\n            });\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\r\n    selector: '[dxTemplate][dxTemplateOf]'\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: TemplateRef, },\n{type: ViewContainerRef, },\n{type: DxTemplateHost, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'dxTemplateOf': [{ type: Input },],\n};\n}\r\n\r\n\r\nexport class DxTemplateModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n    declarations: [DxTemplateDirective],\r\n    exports: [DxTemplateDirective]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}